'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _kendoBaseComponentsVueWrapper = require('@progress/kendo-base-components-vue-wrapper');

var _ChatProps = require('./ChatProps');

var _ChatProps2 = _interopRequireDefault(_ChatProps);

var _Messages = require('./Messages');

var _Messages2 = _interopRequireDefault(_Messages);

var _User = require('./User');

var _User2 = _interopRequireDefault(_User);

var _Toolbar = require('./Toolbar');

var _Toolbar2 = _interopRequireDefault(_Toolbar);

var _KendoChatToolbarButton = require('./KendoChatToolbarButton');

var _KendoChatToolbarButton2 = _interopRequireDefault(_KendoChatToolbarButton);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    props: _ChatProps2.default,
    emits: {
        'kendowidgetready': null
    },
    mixins: [_kendoBaseComponentsVueWrapper.KendoBaseComponent, _Messages2.default, _Toolbar2.default, _User2.default],
    mounted() {
        this._resolveChildren();
        kendo.jQuery(this.$el).kendoChat(this.widgetOptions);

        if (this.v3) {
            this.ready();
            this.$emit('kendowidgetready', this.kendoWidget());
        } else {
            this.$emit('kendowidgetready', this.kendoWidget());
        }
    },
    methods: {
        kendoWidget() {
            return kendo.jQuery(this.$el).getKendoChat();
        },
        _resolveChildren() {
            this.resolveChildren('toolbarButtons', _KendoChatToolbarButton2.default.name);

            if (this.widgetOptions.toolbar && this.widgetOptions.toolbarButtons && this.widgetOptions.toolbarButtons.length) {

                this.widgetOptions.toolbar.buttons = this.widgetOptions.toolbarButtons;
            }
        }
    }
};