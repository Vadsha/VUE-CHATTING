'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _vue = require('vue');

var Vue = _interopRequireWildcard(_vue);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

const allVue = Vue;
const isV3 = allVue.version && allVue.version[0] === '3';

exports.default = {
    name: 'kendo-chat-toolbar-button',
    setup() {
        const v3 = isV3;
        return {
            v3
        };
    },
    render() {
        return null;
    },
    props: {
        name: {
            type: String,
            default: undefined
        },
        text: {
            type: String,
            default: undefined
        },
        iconClass: {
            type: String,
            default: undefined
        },
        attr: {
            type: Object,
            default: undefined
        }
    },
    watch: {
        $attrs() {
            this.mergeAttrs();
        }
    },
    mounted() {
        if (!this.v3) {
            this.mergeAttrs();
        }
    },
    methods: {
        mergeAttrs() {
            if (this.$options.propsData.attr) {
                this.attr = Object.assign(this.attr, this.$attrs);
            } else {
                this.$options.propsData.attr = Object.assign({}, this.attr, this.$attrs);
            }
        }
    }
};